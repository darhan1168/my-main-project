@using Core.Enums
@model TaskViewModel

<h2>Add task in your project</h2>

@using (Html.BeginForm("Create", "Task", FormMethod.Post, new { @action = Url.Action("Create", "Task"), enctype = "multipart/form-data" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Title)
        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.Deadline)
        @Html.TextBoxFor(m => m.Deadline, new { @class = "form-control", type = "datetime-local" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.TaskPriority)
        @Html.DropDownListFor(m => m.TaskPriority, Enum.GetValues(typeof(TaskPriority)).Cast<TaskPriority>().Select(r => new SelectListItem
        {
            Text = r.ToString(),
            Value = r.ToString()
        }), new { @class = "form-control" })
    </div>
    
     <div class="form-group">
            @Html.LabelFor(m => m.File)
            @Html.TextBoxFor(m => m.File, new { @class = "form-control", type = "file" })
     </div>
     
    <div>
        @if (!string.IsNullOrEmpty(ViewData["FieldError"] as string))
        {
            <span style="color: red;">@ViewData["FieldError"]</span>
        } 
    </div>
     
    <button type="submit" class="btn btn-primary">Create</button>
                                                 
    @if (!string.IsNullOrEmpty(ViewData["CreatingError"] as string))
    {
        <span style="color: red;">@ViewData["CreatingError"]</span>
    }                                            
}
