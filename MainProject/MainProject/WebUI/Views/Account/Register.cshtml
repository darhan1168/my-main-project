@using Core.Enums
@model UserRegistrationModel

@{
    ViewBag.Title = "Register";
    // Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<div class="row justify-content-md-center">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                Register
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Username)
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @placeholder = "Enter your username" })
                        @if (!string.IsNullOrEmpty(ViewData["UsernameError"] as string))
                        {
                            <span style="color: red;">@ViewData["UsernameError"]</span>
                        }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter your email" })
                         @if (!string.IsNullOrEmpty(ViewData["EmailError"] as string))
                         {
                             <span style="color: red;">@ViewData["EmailError"]</span>
                         }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Enter your password" })
                        @if (!string.IsNullOrEmpty(ViewData["PasswordError"] as string))
                        {
                            <span style="color: red;">@ViewData["PasswordError"]</span>
                        }
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Role)
                        @Html.DropDownListFor(m => m.Role, Enum.GetValues(typeof(UserRole)).Cast<UserRole>().Select(r => new SelectListItem
                        {
                            Text = r.ToString(),
                            Value = r.ToString()
                        }), new { @class = "form-control custom-select" })
                    </div>
                    <button type="submit" class="btn btn-primary button-with-margin">Register</button>
                    @if (!string.IsNullOrEmpty(ViewData["GeneralError"] as string))
                    {
                        <span style="color: red;">@ViewData["GeneralError"]</span>
                    }
                }
            </div>
        </div>
    </div>
</div>